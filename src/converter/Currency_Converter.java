/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package converter;

import javax.swing.ImageIcon;

/**
 *
 * @author Shady Emad
 */
public class Currency_Converter extends javax.swing.JFrame {

    /**
     * Creates new form conversion
     */
    public Currency_Converter() {
        initComponents();
    }
     double num1;
     double result;
     String from_type;
     String to_type;
     
     public void setAll(String s){
        String all = txtAll.getText() + s;
        txtAll.setText(all);
     }
     
           private void deleteone(){
          String all = txtAll.getText();
         num1 = Double.parseDouble(txtAll.getText().substring(0, all.length()-1)); 
         txtAll.setText(String.valueOf(num1));

     }
    public void CloseFrame() {
        super.dispose();
    }       
     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu2 = new javax.swing.JMenu();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnpoint = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtAll = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn12 = new javax.swing.JButton();
        btn13 = new javax.swing.JButton();
        btnpoint1 = new javax.swing.JButton();
        btn14 = new javax.swing.JButton();
        btn15 = new javax.swing.JButton();
        btn16 = new javax.swing.JButton();
        btn17 = new javax.swing.JButton();
        btn18 = new javax.swing.JButton();
        btn19 = new javax.swing.JButton();
        btnclear1 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        resultAll = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton30 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();

        jMenu2.setText("Edit");

        btn7.setBackground(new java.awt.Color(151, 154, 154));
        btn7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn7.setForeground(new java.awt.Color(255, 255, 255));
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setBackground(new java.awt.Color(151, 154, 154));
        btn8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn8.setForeground(new java.awt.Color(255, 255, 255));
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setBackground(new java.awt.Color(151, 154, 154));
        btn9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn9.setForeground(new java.awt.Color(255, 255, 255));
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn4.setBackground(new java.awt.Color(151, 154, 154));
        btn4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn4.setForeground(new java.awt.Color(255, 255, 255));
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn6.setBackground(new java.awt.Color(151, 154, 154));
        btn6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn6.setForeground(new java.awt.Color(255, 255, 255));
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn1.setBackground(new java.awt.Color(151, 154, 154));
        btn1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn1.setForeground(new java.awt.Color(255, 255, 255));
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn5.setBackground(new java.awt.Color(151, 154, 154));
        btn5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn5.setForeground(new java.awt.Color(255, 255, 255));
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(151, 154, 154));
        btn2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn2.setForeground(new java.awt.Color(255, 255, 255));
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setBackground(new java.awt.Color(151, 154, 154));
        btn3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn3.setForeground(new java.awt.Color(255, 255, 255));
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn0.setBackground(new java.awt.Color(151, 154, 154));
        btn0.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn0.setForeground(new java.awt.Color(255, 255, 255));
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnpoint.setBackground(new java.awt.Color(151, 154, 154));
        btnpoint.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnpoint.setForeground(new java.awt.Color(255, 255, 255));
        btnpoint.setText(".");
        btnpoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpointActionPerformed(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        jButton29.setBackground(new java.awt.Color(255, 0, 0));
        jButton29.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton29.setForeground(new java.awt.Color(255, 255, 255));
        jButton29.setText("OFF");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        txtAll.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jComboBox1.setBackground(new java.awt.Color(128, 128, 128));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EGP - الجنيه المصري", "USD - الدولار الامريكي", "EUR - اليورو", "GBP - الجنيه البريطاني", "CAD - الدولار الكندي", "AUD - الدولار الاسترالي", "RUB - الروبل الروسي", "AED - الدرهم الاماراتي", "SAR - الريال السعودي", "IQD - الدينار العراقي", "KWD - الدينار الكويتي", "MAD - الدرهم المغربي", "JOD - الدينار الاردني", "BHD - الدينار البحريني", "DZD - الدينار الجزائري", "OMR - الريال العماني", "QAR - الريال القطرى", "TND - الدينار التونسي", "LBP - الجنيه اللبناني", "SYP - الجنيه السوري", "SDG -الجنيه السوداني   ", "XBY - Bitcoin", "DOGE - Dogecoin", "ETH - Ether" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        btn10.setBackground(new java.awt.Color(151, 154, 154));
        btn10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn10.setForeground(new java.awt.Color(255, 255, 255));
        btn10.setText("8");
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });

        btn11.setBackground(new java.awt.Color(151, 154, 154));
        btn11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn11.setForeground(new java.awt.Color(255, 255, 255));
        btn11.setText("9");
        btn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn11ActionPerformed(evt);
            }
        });

        btn12.setBackground(new java.awt.Color(151, 154, 154));
        btn12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn12.setForeground(new java.awt.Color(255, 255, 255));
        btn12.setText("6");
        btn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn12ActionPerformed(evt);
            }
        });

        btn13.setBackground(new java.awt.Color(151, 154, 154));
        btn13.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn13.setForeground(new java.awt.Color(255, 255, 255));
        btn13.setText("3");
        btn13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn13ActionPerformed(evt);
            }
        });

        btnpoint1.setBackground(new java.awt.Color(151, 154, 154));
        btnpoint1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnpoint1.setForeground(new java.awt.Color(255, 255, 255));
        btnpoint1.setText(".");
        btnpoint1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpoint1ActionPerformed(evt);
            }
        });

        btn14.setBackground(new java.awt.Color(151, 154, 154));
        btn14.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn14.setForeground(new java.awt.Color(255, 255, 255));
        btn14.setText("0");
        btn14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn14ActionPerformed(evt);
            }
        });

        btn15.setBackground(new java.awt.Color(151, 154, 154));
        btn15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn15.setForeground(new java.awt.Color(255, 255, 255));
        btn15.setText("2");
        btn15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn15ActionPerformed(evt);
            }
        });

        btn16.setBackground(new java.awt.Color(151, 154, 154));
        btn16.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn16.setForeground(new java.awt.Color(255, 255, 255));
        btn16.setText("5");
        btn16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn16ActionPerformed(evt);
            }
        });

        btn17.setBackground(new java.awt.Color(151, 154, 154));
        btn17.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn17.setForeground(new java.awt.Color(255, 255, 255));
        btn17.setText("4");
        btn17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn17ActionPerformed(evt);
            }
        });

        btn18.setBackground(new java.awt.Color(151, 154, 154));
        btn18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn18.setForeground(new java.awt.Color(255, 255, 255));
        btn18.setText("7");
        btn18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn18ActionPerformed(evt);
            }
        });

        btn19.setBackground(new java.awt.Color(151, 154, 154));
        btn19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn19.setForeground(new java.awt.Color(255, 255, 255));
        btn19.setText("1");
        btn19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn19ActionPerformed(evt);
            }
        });

        btnclear1.setBackground(new java.awt.Color(115, 124, 161));
        btnclear1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnclear1.setForeground(new java.awt.Color(255, 255, 255));
        btnclear1.setText("Clear");
        btnclear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclear1ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(255, 0, 0));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("DEL");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        resultAll.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("From");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("To");

        jButton1.setBackground(new java.awt.Color(0, 128, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Currency ");

        jButton30.setBackground(new java.awt.Color(255, 0, 0));
        jButton30.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton30.setForeground(new java.awt.Color(255, 255, 255));
        jButton30.setText("OFF");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jComboBox2.setBackground(new java.awt.Color(128, 128, 128));
        jComboBox2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EGP - الجنيه المصري", "USD - الدولار الامريكي", "EUR - اليورو", "GBP - الجنيه البريطاني", "CAD - الدولار الكندي", "AUD - الدولار الاسترالي", "RUB - الروبل الروسي", "AED - الدرهم الاماراتي", "SAR - الريال السعودي", "IQD - الدينار العراقي", "KWD - الدينار الكويتي", "MAD - الدرهم المغربي", "JOD - الدينار الاردني", "BHD - الدينار البحريني", "DZD - الدينار الجزائري", "OMR - الريال العماني", "QAR - الريال القطرى", "TND - الدينار التونسي", "LBP - الجنيه اللبناني", "SYP - الجنيه السوري", "SDG -الجنيه السوداني ", "XBY - Bitcoin", "DOGE - Dogecoin", "ETH - Ether" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAll, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resultAll, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btn14, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnpoint1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btn18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn19, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn16, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn15, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn13, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnclear1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAll, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultAll, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnclear1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn18, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn17, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn19, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn16, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn15, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn13, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnpoint1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        setAll("7");
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        setAll("8");
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        setAll("9");
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        setAll("4");
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        setAll("6");
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        setAll("1");
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        setAll("5");
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        setAll("2");
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        setAll("3");
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        setAll("0");
    }//GEN-LAST:event_btn0ActionPerformed

    private void btnpointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpointActionPerformed
        setAll(".");
    }//GEN-LAST:event_btnpointActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        txtAll.setText("");
    }//GEN-LAST:event_btnclearActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
        setAll("8");
    }//GEN-LAST:event_btn10ActionPerformed

    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
        setAll("9");
    }//GEN-LAST:event_btn11ActionPerformed

    private void btn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn12ActionPerformed
        setAll("6");
    }//GEN-LAST:event_btn12ActionPerformed

    private void btn13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn13ActionPerformed
        setAll("3");
    }//GEN-LAST:event_btn13ActionPerformed

    private void btnpoint1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpoint1ActionPerformed
        setAll(".");
    }//GEN-LAST:event_btnpoint1ActionPerformed

    private void btn14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn14ActionPerformed
        setAll("0");
    }//GEN-LAST:event_btn14ActionPerformed

    private void btn15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn15ActionPerformed
        setAll("2");
    }//GEN-LAST:event_btn15ActionPerformed

    private void btn16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn16ActionPerformed
        setAll("5");
    }//GEN-LAST:event_btn16ActionPerformed

    private void btn17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn17ActionPerformed
        setAll("4");
    }//GEN-LAST:event_btn17ActionPerformed

    private void btn18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn18ActionPerformed
        setAll("7");
    }//GEN-LAST:event_btn18ActionPerformed

    private void btn19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn19ActionPerformed
        setAll("1");
    }//GEN-LAST:event_btn19ActionPerformed

    private void btnclear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclear1ActionPerformed
        txtAll.setText("");
    }//GEN-LAST:event_btnclear1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        deleteone();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        CloseFrame();
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     from_type = jComboBox1.getSelectedItem().toString();
     to_type = jComboBox2.getSelectedItem().toString();
     
     
    if(from_type.equals("EGP - الجنيه المصري") ){
        switch(to_type){
            case "EGP - الجنيه المصري": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.054;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.050;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.041;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.068;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.073;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.44;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.20;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.20;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 78.48;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.016;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.53;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.038 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.020;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 7.72;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.021;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.20;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.16;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 81.52;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 211;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 23.99;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0000014;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.40;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000018;
                resultAll.setText(String.valueOf(result));
        }
    }
    if(from_type.equals("USD - الدولار الامريكي") ){
        switch(to_type){
            case "USD - الدولار الامريكي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 18.61;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.93;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.77;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.26;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.36 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 82.63;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.67;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.75;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1460;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.31;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.85;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.71;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.38;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 143.65;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.39 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.64;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.01;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1517;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3920 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 446.50;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000025;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 7.36;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00034;
                resultAll.setText(String.valueOf(result));
        }
        } 
    
    if(from_type.equals("U - اليورو") ){
        switch(to_type){
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.08;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 20.07;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.83;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.36;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.47;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 89.12;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.96 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.06 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1574.62;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.33;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 10.63;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.76 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.41;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 154.90;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.42;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.93 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.24;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1635.79;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4232;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 481.12;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000027;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 7.93;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00037;
                resultAll.setText(String.valueOf(result));
        }
    }
    
    if(from_type.equals("GBP - الجنيه البريطاني") ){
        switch(to_type){
            case "GBP - الجنيه البريطاني": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.30;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.21;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 24.24;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.64;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.77 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 107.51;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.78;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.88;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1899.68;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.40;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 12.82 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.92;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.49;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 186.87;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.50;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.74 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.91;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1973.41;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5098;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 580.84;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000033;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.61;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00045;
                resultAll.setText(String.valueOf(result));
        }
		}
    
    if(from_type.equals("CAD - الدولار الكندي") ){
        switch(to_type){
            case "CAD - الدولار الكندي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.79;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.74;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.61;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 14.76;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.08;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 65.46;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.91;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.97;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1000;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1156.92;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 7.81;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.56;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.30;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 113.83;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.31;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.89;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.38;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1202.09;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3093;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 353.80;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000020;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.82;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00027;
                resultAll.setText(String.valueOf(result));
        }
		}  
    
    if(from_type.equals("AUD - الدولار الاسترالي") ){
        switch(to_type){
            case "AUD - الدولار الاسترالي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.74;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.68;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.57;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.93;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 13.71;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 61.07;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.70;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.76;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1074.20;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.22;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 7.26;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.52;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.28;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 105.70;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.28;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.68;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.21;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1119.09;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2890;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 328.55;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000018;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.24;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00024;
                resultAll.setText(String.valueOf(result));
        }
		}
    
    if(from_type.equals("RUB - الروبل الروسي") ){
        switch(to_type){
            case "RUB - الروبل الروسي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.012;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.011;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0095;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.015 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.017;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.23;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.045;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.046;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 18.00;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0038;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.12;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0087;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0046;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.77;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0048;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.045;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.037;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 18.86;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 6.53;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.50;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000000301462796;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.087516122872751;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000004024326261;
                resultAll.setText(String.valueOf(result));
        }
		}
    
    if(from_type.equals("AED - الدرهم الاماراتي") ){
        switch(to_type){
            case "AED - الدرهم الاماراتي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.27229408;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.25257688 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.20931794;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.34325792 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.37020079;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 22.120772;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.0335192;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.0211028;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 399.88423;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.083139273;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.6860773;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.1930565;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.10238257;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 39.281049;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.10469707;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.99115044;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.81752583;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 410.48332;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 684.00562;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 121.8049;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00000665562968;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.938530133233492;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000088921198094;
                resultAll.setText(String.valueOf(result));
        }
		}
    
    if(from_type.equals("SAR - الريال السعودي") ){
        switch(to_type){
            case "SAR - الريال السعودي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.26666667;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.24647053;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.20445446;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.33559562;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.35970866;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 21.547779;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.9237754;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.97933333;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 389.02042;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0814636;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.6207722;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.18906667;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.10026667;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 38.376663;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.10253333;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.97066667;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.8015672;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 402.00;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 670.00565;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 119.32816;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000006440853333;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.848526958053333;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00008623376;
                resultAll.setText(String.valueOf(result));
        }
		}
    
        if(from_type.equals("IQD - الدينار العراقي") ){
        switch(to_type){
            case "IQD - الدينار العراقي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00068570243;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00063388638;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0005259017;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00086320382;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00092534085;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.055411342;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.012663215;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0025183369;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0025716123;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00020950924;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0067410066;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00048617663;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00025783133;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.098705604;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00026365996;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0024960267;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0020611995;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.0337253;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.7222191;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.30684327;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000000016572988;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.004753361686031;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00000022211619;
                resultAll.setText(String.valueOf(result));
        }
		}
    
        if(from_type.equals("KWD - الدينار الكويتي") ){
        switch(to_type){
            case "KWD - الدينار الكويتي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.2734969;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.0257637 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.5106849;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.1203806;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.4150376;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 265.0942;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 60.46317;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 12.02185;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 12.275545;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4773.255;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 32.148693;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.3192341;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.2299464;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 470.84914;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.2580589;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 11.909842;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.8353725;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4932.8712;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 8223.07;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1463.6908 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000079108855579;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 22.523389168962453;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.001060856973874;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("MAD - الدرهم المغربي") ){
        switch(to_type){
            case "MAD - الدرهم المغربي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.10174856;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.094046462;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.078047409;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.12807529;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.13718192;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 8.2749392;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.8787939;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.37367648;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.38154983 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 148.43887 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.031084429;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.072138354;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.038259129;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 14.652592;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.03912403;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.37038093;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.30548242;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 255.65088;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 45.499662;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000002461641966;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.702574212240073;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000032967334791;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("JOD - الدينار الاردني") ){
        switch(to_type){
            case "JOD - الدينار الاردني": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.4104372;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.3034219;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.081938;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.7753726;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.9020806;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 113.99938;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 26.049187;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.1798307;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.2891396;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2057.9566;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.43090815;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 13.861565;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHD - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.5303244;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 202.9655;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.54231312;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.1339915;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4.2336647;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2126.2341;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3543.7586;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 631.1628;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000034104372355;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.723466593794077;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000457441466855;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("BHB - الدينار البحريني") ){
        switch(to_type){
            case "BHB - الدينار البحريني": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.6595745;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.4584206;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.0401332;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.3469733;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.5847104;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 215.68474;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 49.124892;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.7672872 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.9734043;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3880.8481;                                                                                                                                                  ;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.81248644;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 26.140049;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.8856383;
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 382.86047;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.0226064;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.6808511;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 7.9822091;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4009.3085;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 6682.2532;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1189.1983 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000064298670213;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 18.345072372340425;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000861904787234;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("DZD - الدينار الجزائري") ){
        switch(to_type){
            case "DZD - الدينار الجزائري": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0069456748;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0064208593;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.005328602;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.008742077;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0093610243;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.56363815;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.12836781;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.025517237;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.026055722;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 10.140373;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0021233952;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.068307643;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0049269629;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0026130603;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0026721322;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.025296648;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.020858704;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 10.476059;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 17.460288;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.1095367;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000000167990129;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.047953971383638;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000002250540298;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("OMR - الريال العماني") ){
        switch(to_type){
            case "OMR - الريال العماني": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.6007802;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.4042845;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.9950633;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.2730457;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.5038502;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 211.74679;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 48.032432;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.5513654;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.7529259;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3794.142;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.79473741;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 25.564648;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.8439532;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.97789337 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 374.50617;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 9.4668401;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 7.8069764 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3920.6762;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 6534.535;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1162.9075;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000062865019506;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 17.981826237711314;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000843390897269;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("QAR - الريال القطرى") ){
        switch(to_type){
            case "QAR - الريال القطرى": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.27472527;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.25400814;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.21078623;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.34577627;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.37020225;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 22.344728;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.0746124;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.0089286;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.0302198;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 400.88242;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.083955183;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.7007531;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.19478022;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.1032967;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 39.535279;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.10563187;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.82422164;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 414.14835;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 690.25514;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 122.92928;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000006644120879;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.897886726978022;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000089059807692;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("TND - الدينار التونسي") ){
        switch(to_type){
            case "TND - الدينار التونسي": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.33324277;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.30812847;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.25571183;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.41953712;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.44924254;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 27.035947;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 6.1556592 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.2239993;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.2498291;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 486.27999;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.10184098;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.2768078;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.23631709;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.12532472;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 47.950218;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.12813665;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.2130492;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 502.38231;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 837.31343;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 149.13668;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000008060813269;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.292231222844665;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00010794901199;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("LBP - الجنيه اللبناني") ){
        switch(to_type){
            case "LBP - الجنيه اللبناني": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00066334992;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00061335719;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00050897173;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00083495927;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00089408236;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.053972285;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.012253113;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0024361526;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0024875622;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.96779178;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00020271464;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0065211597;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00047031509;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00024941957;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.095527686;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00025505804;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0024145937;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0019907489;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.6666864;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.29680594;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000000016041924;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.004537871708657;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000000214731542;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        if(from_type.equals("SYP - الجنيه السوري") ){
        switch(to_type){
            case "SYP - الجنيه السوري": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00039800525;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00036804143;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00030538646;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00050093549;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00053636376;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.032458283;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0073527852;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0014616743;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0014925197;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.5807148;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00012161857;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.003913371;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00028218572;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00014964997;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.057303729;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00015303302;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0014487391;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0011945972;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.59999291;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني ":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.17810295;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0000000096248017;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.002721698445031;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000000128793742;
                resultAll.setText(String.valueOf(result));
        }
		}
        
        
       if(from_type.equals("SDG -الجنيه السوداني ") ){
        switch(to_type){
            case "SDG -الجنيه السوداني ": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0022356181;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0020665791;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0017150331;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0028124402;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0030084883;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.1814974;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.041287426;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0082089812;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0083822136;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.2612656;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00068308934;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.02197063;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0015846496;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00084037837;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.32169192;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.00085937628;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0081351186;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.0067045176;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3.369146;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5.615311;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000000054016647;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.015297623346913;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000000721707741;
                resultAll.setText(String.valueOf(result));
        }
		}
       
       if(from_type.equals("XBY - Bitcoin") ){
        switch(to_type){
            case "XBY - Bitcoin": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 41388.159;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 38273.038;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 31786.041;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 52105.954;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 55811.792;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3346034.92;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 763506.85;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 152021.92;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 155261.50;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 60410859.531 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 12653.876;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 407036.92;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 29356.233;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 15568.327;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 5961574.34;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 15920.270;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 150731.50;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 124301.144;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 62425203.63;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 104043294.21;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 18522925.16;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 285854.85342378385;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 13.365852446388194;
                resultAll.setText(String.valueOf(result));
        }
		}
       if(from_type.equals("DOGE - Dogecoin") ){
        switch(to_type){
            case "DOGE - Dogecoin": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.14488948;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.13401443;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.11126613;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.1823991;
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.19551859;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 11.744821;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2.6730918;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.53219447;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.54342525;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 211.3684;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.044292357;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1.4251372;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.10276066;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.054496484;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 20.864802;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.055728452;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.5276284;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.43523459;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 218.51643;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 364.19856;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 64.861816;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000003499327479;
                resultAll.setText(String.valueOf(result));
                break;
            case "ETH - Ether":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.000046770103816;
                resultAll.setText(String.valueOf(result));
        }
		}
       
       if(from_type.equals("ETH - Ether") ){
        switch(to_type){
            case "ETH - Ether": 
                num1= Double.parseDouble(txtAll.getText());
                resultAll.setText(String.valueOf(num1)); 
                break;
            case "USD - الدولار الامريكي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2850.54;
                resultAll.setText(String.valueOf(result));
                break;
            case "EUR - اليورو": 
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2704.18;
                resultAll.setText(String.valueOf(result));
                break;
            case "GBP - الجنيه البريطاني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2268.21;
                resultAll.setText(String.valueOf(result));
                break;
            case "CAD - الدولار الكندي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3641.82;
                
                resultAll.setText(String.valueOf(result));
                break;
            case "AUD - الدولار الاسترالي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 3994.35;
                resultAll.setText(String.valueOf(result));
                break;
            case "RUB - الروبل الروسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 201488.85;
                resultAll.setText(String.valueOf(result));
                break;
            case "EGP - الجنيه المصري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 52668.64;
                resultAll.setText(String.valueOf(result));
                break;
            case "AED - الدرهم الاماراتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 10457.83;
                resultAll.setText(String.valueOf(result));
                break;
            case "SAR - الريال السعودي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 10678.52;
                resultAll.setText(String.valueOf(result));
                break;
            case "IQD - الدينار العراقي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4155072.247;
                resultAll.setText(String.valueOf(result));
                break;
            case "KWD - الدينار الكويتي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 873.416;
                resultAll.setText(String.valueOf(result));
                break;
            case "MAD - الدرهم المغربي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 28455.58;
                resultAll.setText(String.valueOf(result));
                break;
            case "JOD - الدينار الاردني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 2017.968;
                resultAll.setText(String.valueOf(result));
                break;
            case "BHB - الدينار البحريني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1070.1781;
                resultAll.setText(String.valueOf(result));
                break;
            case "DZD - الدينار الجزائري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 412103.94;
                resultAll.setText(String.valueOf(result));
                break;
            case "OMR - الريال العماني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1094.231;
                resultAll.setText(String.valueOf(result));
                break;
            case "QAR - الريال القطرى":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 10358.91;
                resultAll.setText(String.valueOf(result));
                break;
            case "TND - الدينار التونسي":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 8706.593;
                resultAll.setText(String.valueOf(result));
                break;
            case "LBP - الجنيه اللبناني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 4290125.77 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "SYP - الجنيه السوري":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 7149962.09;
                resultAll.setText(String.valueOf(result));
                break;
            case "SDG -الجنيه السوداني":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 1272635.08;
                resultAll.setText(String.valueOf(result));
                break;
            case "XBY - Bitcoin":
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 0.07306261647261 ;
                resultAll.setText(String.valueOf(result));
                break;
            case "DOGE - Dogecoin":  
                num1= Double.parseDouble(txtAll.getText());
                result = num1 * 20651.514848958064;
                resultAll.setText(String.valueOf(result));
        }
		}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        ImageIcon icon = new ImageIcon("src/app icons/currency.jpg");
        setIconImage(icon.getImage());
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Currency_Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Currency_Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Currency_Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Currency_Converter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Currency_Converter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn12;
    private javax.swing.JButton btn13;
    private javax.swing.JButton btn14;
    private javax.swing.JButton btn15;
    private javax.swing.JButton btn16;
    private javax.swing.JButton btn17;
    private javax.swing.JButton btn18;
    private javax.swing.JButton btn19;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnclear1;
    private javax.swing.JButton btnpoint;
    private javax.swing.JButton btnpoint1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField resultAll;
    private javax.swing.JTextField txtAll;
    // End of variables declaration//GEN-END:variables
}
